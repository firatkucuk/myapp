name: CI/CD

on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - main
      - dev

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker images
      uses: docker/build-push-action@v3.0.0
      with:
        context: .
        push: true
        tags: firatkucuk/app:latest

    - name: Set up kubectl
      uses: matootie/dokube@v1.4.0
      with:
        personalAccessToken: ${{ secrets.DIGITALOCEAN_TOKEN }}
        clusterName: k8s-1-22-11-do-0-ams3-1657308529382
        expirationTime: "1200"

    - name: Deploy App
      run: |
            cat <<EOF | kubectl apply -f -
            apiVersion: v1
            kind: Service
            metadata:
              name: myapp-svc
              labels:
                app: myapp
            spec:
              type: LoadBalancer
              ports:
              - name: http
                port: 80
                protocol: TCP
                targetPort: 8080
              selector:
                app: myapp
            ---
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: myapp-deployment
              labels:
                app: myapp
            spec:
              replicas: 1
              selector:
                matchLabels:
                  app: myapp
              template:
                metadata:
                  labels:
                    app: myapp
                spec:
                  containers:
                  - name: myapp
                    image: firatkucuk/app:latest
                    imagePullPolicy: Always
                    ports:
                      - containerPort: 8080
            EOF
